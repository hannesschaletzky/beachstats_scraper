name: CI
on: [push]
jobs:
  test:
    runs-on: ubuntu-latest
    container: node:latest

    services:
      # https://remarkablemark.org/blog/2021/03/14/setup-postgresql-in-github-actions/
      # https://docs.github.com/en/actions/using-containerized-services/creating-postgresql-service-containers
      postgres: # access service through this name
        image: postgres:latest
        env:
          # POSTGRES_DB: beachstats
          POSTGRES_USER: hannes
          POSTGRES_PASSWORD: mypsqlpassword
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: install psql client
        run: |
          apt-get update
          apt-get install --yes postgresql-client

      - name: execute query
        run: psql -h postgres -d postgres -U hannes -c 'SELECT 1;'
        env:
          PGPASSWORD: mypsqlpassword

      - name: pull repo
        uses: actions/checkout@v3

      - name: npm ci
        run: npm ci

      # - name: run migrations
      #   run: npm run migrate up
      #   env:
      #     PGHOST: postgres # service name
      #     PGPORT: 5432
      #     PGUSER: hannes
      #     PGDATABASE: beachstats
      #     PGPASSWORD: mypsqlpassword

      - name: change permissions of testFiles # to be accessible by tests
        run: chmod -R 777 testFiles

      - name: run tests
        run: npm run test
        # env:
        #   PGHOST: postgres # service name
        #   PGPORT: 5432
        #   PGUSER: hannes
        #   PGDATABASE: postgres
        #   PGPASSWORD: mypsqlpassword

  # deploy:
  #   name: 'deploy'
  #   # needs: test
  #   runs-on: ubuntu-latest
  #   steps:
  #     # https://blog.benoitblanchon.fr/github-action-run-ssh-commands/
  #     - name: Configure SSH
  #       run: |
  #         mkdir -p ~/.ssh/
  #         echo "$SSH_KEY" > ~/.ssh/droplet.key
  #         chmod 600 ~/.ssh/droplet.key
  #         cat >>~/.ssh/config <<END
  #         Host droplet
  #           HostName $SSH_HOST
  #           User root
  #           IdentityFile ~/.ssh/droplet.key
  #           StrictHostKeyChecking no
  #         END
  #       env:
  #         SSH_KEY: ${{ secrets.SSHKEY }}
  #         SSH_HOST: ${{ secrets.HOST }}

  #     - name: print root
  #       run: ssh droplet 'whoami'

  #     - name: update repo
  #       run: ssh droplet 'cd /repos/beachstats_scraper/ && git pull && npm install'

  #     - name: build repo
  #       run: ssh droplet 'cd /repos/beachstats_scraper/ && npm run build'

  #     - name: copy .env
  #       run: ssh droplet 'cp /repos/beachstats_scraper/.env /repos/beachstats_scraper/build/'

  #     - name: reload pm2 process
  #       run: ssh droplet 'source ~/.nvm/nvm.sh && cd /repos/beachstats_scraper/ && pm2 reload pm2/prod.config.js'
